<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" ><topic xml:lang="en-us" id="topic31365">
<title>HP Helion 1.2 Development Platform: Commercial Installation and Configuration</title>
<prolog>
<metadata>
<othermeta name="layout" content="default"/>
<othermeta name="product-version" content="HP Helion Development Platform"/>
<othermeta name="product-version" content="HP Helion Development Platform 1.1"/>
<othermeta name="role" content="Systems Administrator"/>
<othermeta name="role" content="System Engineer"/>
<othermeta name="role" content="Cloud Administrator"/>
<othermeta name="role" content="Network Administrator"/>
<othermeta name="role" content="Application Developer"/>
<othermeta name="role" content="Application Developer"/>
<othermeta name="role" content="ISV Developer"/>
<othermeta name="role" content="Service Developer"/>
<othermeta name="role" content="Jayme P, Patrick F"/>
<othermeta name="product-version1" content="HP Helion Development Platform"/>
<othermeta name="product-version2" content="HP Helion Development Platform 1.1"/>
</metadata>
</prolog>
<body>
<p>
<!--UNDER REVISION-->
 <!--./devplatform/1.2/1.2devplatform_commercial_install.md-->
 <!--permalink: /helion/devplatform/1.2/install/--></p>
<p>
  <xref href="../../devplatform/1.0devplatform_commercial_install.dita" >See the Helion 1.0 Development Platform version of this page</xref>
</p>
<p>The HP Helion Development Platform currently contains four products: Application Lifecycle Service (ALS), Marketplace Service, Messaging Service and Database Service.</p>
<p>The following topics explain how to install and configure the HP Helion Development Platform. There is also <xref href="../../devplatform/1.2/1.2devplatform.troubleshooting.dita" >Troubleshooting</xref> documentation to handle issues that may occur.</p>
<p>
<b>NOTE</b>: If you are installing the HP Helion Development Platform <b>Community</b> edition, follow the <xref href="../../devplatform/1.2/1.2devplatform_community_install.dita" >HP Helion Development Community Installation and Configuration</xref> instructions instead.</p>
<ul>
<li>
<xref href="#topic31365/prerequisites">Prerequisites</xref>
</li>
<li>
<xref href="#topic31365/installing-the-hp-helion-development-platform">Installing the HP Helion Development Platform</xref>
</li>
<li>
<xref href="#topic31365/install-messaging">Install the Messaging Service</xref>
</li>
<li>
<xref href="#topic31365/install-als">Install the Application Lifecycle Service</xref>
</li>
<li>
<xref href="#topic31365/install-database">Install the Database Service</xref>
</li>
<li>
<xref href="#topic31365/install-marketplace">Install the Marketplace Service</xref>
</li>
</ul>
<section>
<title>Prerequisites</title>
<p>The HP Helion Development Platform is installed in the overcloud of HP Helion OpenStack®.</p>
<p>Before you begin installation:</p>
<ul>
<li>
<p>The Cinder block storage service must be configured with either <xref href="../../commercial/GA1/1.1commercial.-vsa-overview.dita/" >VSA</xref> or <xref href="./commercial/GA1/1.1commercial.install-3par.dita" >3Par</xref>.</p>
</li>
<li>
<p>If you installed HP Helion OpenStack® with <b>KVM</b> hypervisor support, configure HP StoreVirtual VSA for Block Storage or configure HP 3PAR StoreServ Storage.</p>
</li>
<li>
<p>If you installed HP Helion OpenStack with <b>ESX</b> hypervisor support, deploy the compute proxy on the ESX hosts and deploy OVSvApp for HP Virtual Cloud Networking. Note that the HP Helion Development Platform expects the cloud management service to communicate with both service <b>and</b> external networks.</p>
</li>
<li>
<p>The system running the installer needs to have Python 2.7. Most modern operating systems include this as part of their base toolkit. This document is geared toward a Linux operating system but this does not preclude the installer from running on other operating systems with some minor modifications to the command-line statements.</p>
</li>
<li>
<p>The installer requires the following packages. If they are not found, it will prompt you to install them.</p>

<ul>
<li>python-dev </li>
<li>libffi-dev </li>
<li>libssl-dev </li>
<li>python-virtualenv</li>
<li>python-pip</li>
</ul>
</li>
</ul>
</section>
<section>
<title>Installing the HP Helion Development Platform</title>
</section>
<section>
<required-cleanup>
<title>Downloading and unpacking the installation file</title>
<p>The installation of the HP Helion Development Platform for the HP Helion OpenStack Commercial Edition is provided as a small compressed tar file.  The images for the actual services will be downloaded at the installer's request.</p>
<p>
<b>Note</b>: Should you need more assistance during installation, the install script also has a help feature.</p>
<codeblock>
  <codeph>./DevelopmentPlatform_Setup.sh -h
</codeph>
</codeblock>
<ol>
<li>
<p>Register at and download the package from the <xref href="https://helion.hpwsportal.com/catalog.html#/Home/Show" scope="external" format="html" >HP Helion Development Platform</xref> (HDN).</p>
</li>
<li>
<p>Before you begin the installation, unpack the tar file.</p>

<codeblock>
<codeph>tar -zxvf DevelopmentPlatform_1.1.0.7.tar.gz
</codeph>
</codeblock>
</li>
<li>
<p>Navigate to the <i>dev-platform-installer</i> directory inside the dev-platform-installer.</p>

<codeblock>
<codeph>cd dev-platform-installer  
</codeph>
</codeblock>
</li>
<li>
<p>If your network uses a proxy, it may be necessary to set the <i>https_proxy</i> shell variable so that the installer may download required Python libraries from the <xref href="https://pypi.python.org/pypi" scope="external" format="html" >pypi</xref> site. To set the <i>https_proxy</i> shell variable, enter the following command:</p>

<codeblock>
<codeph>export https_proxy={ip address or url of http proxy} 
</codeph>
</codeblock>

<p>Example:</p>

<codeblock>
<codeph>export https_proxy=http://proxy.example.com
</codeph>
</codeblock>
</li>
<li>
<p>Confirm that you have access to the <xref href="https://pypi.python.org/pypi" scope="external" format="html" >pypi</xref> site. The following commands will verify access to the site and download one of the prerequisite files as a brief test.</p>

<codeblock>
<codeph>ping pypi.python.org
sudo -E pip install python-novaclient
</codeph>
</codeblock>
</li>
<li>
<p>If your network uses a proxy, you must define the proxy exclusion list so that proxies are not used for communicating with the services in the overcloud. To define the proxy exclusion list, enter the following command:</p>

<codeblock>
<codeph>export no_proxy=localhost,127.0.0.1,{ip address or host name of identity service aka keystone}  
</codeph>
</codeblock>

<p>Example:</p>

<codeblock>
<codeph>export no_proxy=localhost,127.0.0.1,10.0.0.10 
</codeph>
</codeblock>
</li>
<li>
<p>Validate Keystone access on port 5000 using <i>curl</i>.</p>

<codeblock>
<codeph>curl https://{ip address or host name of identity service aka keystone}:5000
</codeph>
</codeblock>

<p>Example:</p>

<codeblock>
<codeph>curl https://10.0.0.10:5000
</codeph>
</codeblock>

<p>
<!--Removed anchor point commandline-->
</p>
</li>
<li>
<p>Run this command to install the Helion Development Platform.<!--A BR tag was used here in the original source.--> By default the Username is <i>admin</i> and the Region is <i>regionOne</i>. Use the <i>admin tenant_id</i> from the overcloud. The parameter <i>location/ephemeralca-cacert.crt</i> can be found on the seed at <i>/usr/local/share/ca-certificates/ephemeralca-cacert.crt</i>
</p>

<codeblock>
<codeph>sudo ./DevelopmentPlatform_Setup.sh -p {admin_user_password} -a {auth_host_ip_address} -u {username} -i {tenant_id} -r {region_name} -e {location/ephemeralca-cacert.crt} install
</codeph>
</codeblock>
</li>
<li>
<p>Once the installation is complete, you should see output similar to the following:</p>

<codeblock>
<codeph>2014-06-17 16:53:19.765       INFO Install Complete
</codeph>
</codeblock>
</li>
</ol>
</required-cleanup>
</section>
<section>
<title>Install the Messaging Service</title>
<p>This section provides details on installing the messaging service from the Development Platform.</p>
</section>
<section>
<required-cleanup>
<title>Download the Messaging Service</title>
<ol>
<li>
<p>Open Horizon and log in as an <i>Admin</i> user. Then click on the <b>Admin</b> panel in Horizon and select <b>Development Platform</b>. Finally, click <b>Configure Services</b>.</p>
</li>
<li>
<p>Click the <b>Connect</b> button on the <b>Configure Services</b> screen and enter your username and password for the HP Download Network (HPN). Select the Sign-up button if you do not have an account.</p>
</li>
<li>
<p>In the <b>Configure Services</b> panel locate the <b>Messaging</b> item in the Configure Services table and select <b>Download Service</b> and wait for the download to complete.</p>

<p>
<image href="../../media/dev_install_messaging.png"/>
</p>
</li>
</ol>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>
<!--Removed anchor point horizon-->Install the Horizon UI</title>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Step 1: Retrieve the Messaging Service Update</title>
<p>Use the <b>Helion Development Platform UI</b> to check the HP Download Network (HPN) for a new Service Update for the messaging service.</p>
<p>
<b>NOTE:</b> Be sure that the "Admin" project is checked (check mark beside it) from the Project selector before you check for service updates. The Project selector is located at the top of the page to the right of the OpenStack logo.</p>
<p>If there is a new Service Update for Messaging, retrieve it. This will retrieve the Messaging package and push it into a container in Swift within your local cloud.</p>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Step 2: Install the Messaging Service Update</title>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Preparation</title>
<p>You will need the following pieces of information in order to run the Messaging Service Update.</p>
<table pgwide="1">
<tgroup cols="2">
<colspec colname="col1"/>
<colspec colname="col2"/>
<thead>
<row>
    <entry>
      Identifier
    </entry>
    <entry>
      Description
    </entry>
  </row>
</thead>
<tbody>
<row>
    <entry>
      BASE_NODE_IP
    </entry>
    <entry>
      The IP address of the base node for your Helion installation.
    </entry>
  </row>
<row>
    <entry>
      SEED_NODE_IP
    </entry>
    <entry>
      The IP address of the seed node for your Helion installation.
    </entry>
  </row>
<row>
    <entry>
      USERNAME
    </entry>
    <entry>
      The username of a cloud admin that has rights to perform an HDP Messaging Service Update.
    </entry>
  </row>
<row>
    <entry>
      PASSWORD
    </entry>
    <entry>
      The password of a cloud admin that has rights to perform an HDP Messaging Service Update.
    </entry>
  </row>
<row>
    <entry>
      HEAT_ADMIN_KEY
    </entry>
    <entry>
      The private key file for the **heat-admin** user. 
Usually available within the root user account on the seed node here: **~/.ssh/id_rsa**
    </entry>
  </row>
<row>
    <entry>
      CONTAINER_NAME
    </entry>
    <entry>
      The Swift container that contains the Messaging service update.
 
Defaults to **cue-dashboard-horizon-ui**.
    </entry>
  </row>
<row>
    <entry>
      SERVICE_UPDATE_FILENAME
    </entry>
    <entry>
      The filename of the Messaging service update.
 
Typically can be found inside the above container in Swift.
    </entry>
  </row>
</tbody>
</tgroup>
</table>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Let's get to it!</title>
<p>a) SSH to the seed node of your cloud:</p>
<codeblock>
  <codeph># SSH to the base node
ssh USERNAME@BASE_NODE_IP

# Become root
sudo su (will prompt for the PASSWORD)

# SSH to seed node
ssh SEED_NODE_IP
</codeph>
</codeblock>
<p>b) Ensure your environment has the proper credentials to perform the download from Swift:</p>
<codeblock>
  <codeph># Source the overcloud credentials to reach Swift 
export TE_DATAFILE="/root/tripleo/ce_env.json"
source /root/tripleo/tripleo-incubator/overcloudrc
</codeph>
</codeblock>
<p>c) Use the Swift client to download the Service Update:</p>
<codeblock>
  <codeph># List the contents of the Swift container
swift list cue-dashboard-horizon-ui

# Take note of the name of the file within the container
# ex: SERVICE_UPDATE_FILENAME.tar.gz

# Download the installation file
swift download CONTAINER_NAME SERVICE_UPDATE_FILENAME
</codeph>
</codeblock>
<p>d)  Once the file is downloaded, unzip/tar the file:</p>
<codeblock>
  <codeph>tar -zxvf SERVICE_UPDATE_FILENAME.tar.gz
</codeph>
</codeblock>
<p>e) Go into the newly created folder and execute the install script, passing in the location of the private key of the heat-admin account:</p>
<codeblock>
  <codeph># Source undercloud creds from the same location as the overcloudrc
source /root/tripleo/tripleo-incubator/undercloudrc

# Fire up the install!
cd SERVICE_UPDATE_FILENAME
./install.sh HEAT_ADMIN_KEY
</codeph>
</codeblock>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Step 3: Configure the Service</title>
<ol>
<li>
<p>In the Configure Services panel in the <b>Helion Development Platform UI</b>, click the <b>Configure Service</b> button to configure the messaging service and wait for the configuration step to complete.</p>
</li>
<li>
<p>Log out from the Horizon dashboard. Log back into the Horizon dashboard as a non-admin user and click on the <b>Messaging</b> panel under the current Project to begin using the Messaging Service.</p>
</li>
</ol>
</required-cleanup>
</section>
<section>
<title>Install the Application Lifecycle Service (ALS)<!--Removed anchor point install-als--></title>
<p>This section provides details on installing the Application Lifecycle service from the Development Platform.</p>
</section>
<section>
<required-cleanup>
<title>Prerequisites</title>
<p>For ALS to install dependencies for deployed applications, you must provide ALS with outbound Internet connectivity. This process is documented in Step 7 of <xref href="http://docs.hpcloud.com/helion/community/install#startseed" scope="external" format="html" >"Starting the seed and building your cloud"</xref> in the baremetal installation instructions.  If an HTTP Proxy is required for Internet downloads, follow the instructions in the <xref href="/helion/devplatform/1.2/als/admin/server/configuration#http-proxy" >Administration Guide</xref>.</p>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Connect to the Download Service</title>
<ol>
<li>
<p>Open Horizon and login as the "Admin" user. Then click on the <b>Admin</b> panel in Horizon and select <b>Development Platform</b>. Finally, click on <b>Configure Services</b>.</p>
</li>
<li>
<p>Click the <b>Connect</b> button on the <b>Configure Services</b> panel and enter your username and password for the HP Download Network (HPN). Select the Sign-up button if you do not have an account.</p>
</li>
</ol>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Download the Application Lifecycle Service</title>
<ol>
<li>
<p>In the <b>Configure Services</b> panel, locate the Application Lifecycle Service item in the Configure Services table.</p>
</li>
<li>
<p>Select <b>Download Service</b> and wait for the download to complete.</p>
</li>
</ol>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>
<!--Removed anchor point horizon-->Install the Horizon UI</title>
<p>This section describes how to install the Horizon UI for the ALS service.</p>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Step 1: Retrieve the ALS Service Update from CODN</title>
<p>Use the <b>Helion Development Platform UI</b> to check CODN for a new Service Update for ALS.</p>
<p>
<b>NOTE:</b> Be sure that the "Admin" project is checked (check mark beside it) from the Project selector before you check for service updates. The Project selector is located at the top of the page to the right of the OpenStack logo.</p>
<p>If there is a new Service Update for ALS, retrieve it from CODN. This will retrieve the ALS package from CODN and push it into a container in Swift within your local cloud.</p>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Step 2: Install the ALS Service Update</title>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Preparation</title>
<p>You will need the following pieces of information in order to run the ALS Service Update.</p>
<table pgwide="1">
<tgroup cols="2">
<colspec colname="col1"/>
<colspec colname="col2"/>
<thead>
<row>
    <entry>
      Identifier
    </entry>
    <entry>
      Description
    </entry>
  </row>
</thead>
<tbody>
<row>
    <entry>
      BASE_NODE_IP
    </entry>
    <entry>
      The IP address of the base node for your Helion installation.
    </entry>
  </row>
<row>
    <entry>
      SEED_NODE_IP
    </entry>
    <entry>
      The IP address of the seed node for your Helion installation.
    </entry>
  </row>
<row>
    <entry>
      USERNAME
    </entry>
    <entry>
      The username of a cloud admin that has rights to perform an HDP ALS Service Update.
    </entry>
  </row>
<row>
    <entry>
      PASSWORD
    </entry>
    <entry>
      The password of a cloud admin that has rights to perform an HDP ALS Service Update.
    </entry>
  </row>
<row>
    <entry>
      HEAT_ADMIN_KEY
    </entry>
    <entry>
      The private key file for the **heat-admin** user. 
Usually available within the root user account on the seed node here: **~/.ssh/id_rsa**
    </entry>
  </row>
<row>
    <entry>
      CONTAINER_NAME
    </entry>
    <entry>
      The Swift container that contains the ALS service update.
 
Defaults to **als-horizon-ui**.
    </entry>
  </row>
<row>
    <entry>
      SERVICE_UPDATE_FILENAME
    </entry>
    <entry>
      The filename of the ALS service update.
 
Typically can be found inside the above container in Swift.
    </entry>
  </row>
</tbody>
</tgroup>
</table>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Let's get to it!</title>
<p>a) SSH to the seed node of your cloud:</p>
<codeblock>
  <codeph># SSH to the base node
ssh USERNAME@BASE_NODE_IP

# Become root
sudo su (will prompt for the PASSWORD)

# SSH to seed node
ssh SEED_NODE_IP
</codeph>
</codeblock>
<p>b) Ensure your environment has the proper credentials to perform the download from Swift:</p>
<codeblock>
  <codeph># Source the overcloud credentials to reach Swift 
export TE_DATAFILE="/root/tripleo/ce_env.json"
source /root/tripleo/tripleo-incubator/overcloudrc
</codeph>
</codeblock>
<p>c) Use the Swift client to download the Service Update:</p>
<codeblock>
  <codeph># List the contents of the Swift container
swift list als-horizon-ui

# Take note of the name of the file within the container
# ex: SERVICE_UPDATE_FILENAME.tar.gz

# Download the installation file
swift download CONTAINER_NAME SERVICE_UPDATE_FILENAME
</codeph>
</codeblock>
<p>d)  Once the file is downloaded, unzip/tar the file:</p>
<codeblock>
  <codeph>tar -zxvf SERVICE_UPDATE_FILENAME.tar.gz
</codeph>
</codeblock>
<p>e) Go into the newly created folder and execute the install script, passing in the location of the private key of the heat-admin account:</p>
<codeblock>
  <codeph># Source undercloud creds from the same location as the overcloudrc
source /root/tripleo/tripleo-incubator/undercloudrc

# Fire up the install!
cd SERVICE_UPDATE_FILENAME
./install.sh HEAT_ADMIN_KEY
</codeph>
</codeblock>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Step 3: Configure the Service</title>
<ol>
<li>
<p>In the Configure Services panel in the <b>Helion Development Platform UI</b>, click the <b>Configure Service</b> button to configure the Application Lifecycle Service and wait for the configuration step to complete.</p>

<p>
<image href="../../media/dev_install_application-life-cycle.png"/>
</p>
</li>
<li>
<p>Log out from the Horizon dashboard. Log back into the Horizon dashboard as a non-admin user and click on the <b>Application Lifecycle Service</b> panel under the current Project to being using Application Lifecycle Services.</p>
</li>
</ol>
</required-cleanup>
</section>
<section>
<title>Install the Database Service<!--Removed anchor point install-database--></title>
<p>This section provides details on installing the Database Service from the Development Platform.</p>
</section>
<section>
<required-cleanup>
<title>Prerequisites</title>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Availability Zones</title>
<p>To configure the Database Service in a highly available manner, it is necessary to create separate availability zones. As a best practice, HP recommends creating three availability zones. All compute hosts should be placed within one of these availability zones. If a compute host is not associated with an availability zone, the Database Service will not be able to provision a database instance to it. As a result, the Database Service may run out of capacity even though there are compute hosts with free capacity.</p>
<p>The following steps show how to create three availability zones and assign a compute host to the zone.</p>
<ol>
<li>
<p>Connect to an overcloud controller node and execute the following commands to create three availability zones named: "AZ-1", "AZ-2" and "AZ-3".</p>

<codeblock>
<codeph>nova aggregate-create aggregate-AZ-1 AZ-1
nova aggregate-create aggregate-AZ-2 AZ-2
nova aggregate-create aggregate-AZ-3 AZ-3
</codeph>
</codeblock>
</li>
<li>
<p>Validate that the availability zones were correctly created by issuing the following command.</p>

<codeblock>
<codeph>nova aggregate-list
</codeph>
</codeblock>
</li>
<li>
<p>The following commands will add a compute host to your newly created availability zones. Issue this command for every compute host that you wish to associate with an availability zone.</p>

<codeblock>
<codeph>nova aggregate-add-host &lt;id&gt; &lt;hostname&gt;
</codeph>
</codeblock>
</li>
<li>
<p>The following command can be used to list all availability zones and the compute hosts associated with them.</p>

<codeblock>
<codeph>nova availability-zone-list
</codeph>
</codeblock>
</li>
</ol>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Quotas</title>
<p>The <b>Database Service</b> will be installed into the admin tenant of the Helion OpenStack overcloud and the admin tenant must have sufficient quota available and unused resources for the service to use. To check existing quota availability, log-in to Horizon as the <b>admin</b> user and open the <b>Overview</b> panel under the <b>Compute</b> tab.</p>
<p>If you are not configuring the Database Service to be highly available you must have the following quota available:</p>
<table>
<tgroup cols="2">
<colspec colname="col1"/>
<colspec colname="col2"/>
<thead>
<row>
<entry>Resource</entry>
  <entry align="right">Usage</entry>
</row>
</thead>
<tbody>
<row>
<entry>Floating IPs</entry>
  <entry align="right">6</entry>
</row>
<row>
<entry>Instances</entry>
  <entry align="right">6</entry>
</row>
<row>
<entry>Networks</entry>
  <entry align="right">2</entry>
</row>
<row>
<entry>RAM (GB)</entry>
  <entry align="right">24</entry>
</row>
<row>
<entry>Routers</entry>
  <entry align="right">2</entry>
</row>
<row>
<entry>Security Groups</entry>
  <entry align="right">6</entry>
</row>
<row>
<entry>Volumes</entry>
  <entry align="right">4</entry>
</row>
<row>
<entry>Volume Storage (GB)</entry>
  <entry align="right">160</entry>
</row>
</tbody>
</tgroup>
</table>
<p>If you have set up Availability Zones and plan to install the Database Service in a highly-available configuration you must have the following quota available:</p>
<table>
<tgroup cols="2">
<colspec colname="col1"/>
<colspec colname="col2"/>
<thead>
<row>
<entry>Resource</entry>
  <entry align="right">Usage</entry>
</row>
</thead>
<tbody>
<row>
<entry>Floating IPs</entry>
  <entry align="right">16</entry>
</row>
<row>
<entry>Instances</entry>
  <entry align="right">16</entry>
</row>
<row>
<entry>Networks</entry>
  <entry align="right">2</entry>
</row>
<row>
<entry>RAM (GB)</entry>
  <entry align="right">64</entry>
</row>
<row>
<entry>Routers</entry>
  <entry align="right">2</entry>
</row>
<row>
<entry>Security Groups</entry>
  <entry align="right">6</entry>
</row>
<row>
<entry>Volumes</entry>
  <entry align="right">4</entry>
</row>
<row>
<entry>Volume Storage (GB)</entry>
  <entry align="right">160</entry>
</row>
</tbody>
</tgroup>
</table>
<p>In addition to the quota mentioned above, for every database instance that is created by a user, the necessary resources to create that instance will be deducted from the admin tenant quota. The user's database service quota will also be affected.</p>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Download the Database Service</title>
<ol>
<li>
<p>Open Horizon and login as the "admin" user. Then click on the admin panel in Horizon and select the <b>Development Platform</b> panel under Admin. Then click on the <b>Configure Services</b> sub-panel.</p>
</li>
<li>
<p>Click the <b>Connect</b> button on the <b>Configure Services</b> panel and enter your username and password for the HP Download Network (HPN). Select the Sign-up button if you do not have an account.</p>
</li>
<li>
<p>In the <b>Configure Services</b> panel locate the Database Service item in the Configure Services table and select <b>Download Service</b> and wait for the download to complete.</p>
</li>
</ol>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>
<!--Removed anchor point horizon-->Install the Horizon UI</title>
<p>This section describes how to install the Horizon UI for the Database  service.</p>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Step 1: Retrieve the Database Service Update from CODN</title>
<p>Use the <b>Helion Development Platform UI</b> to check CODN for a new Service Update for Database.</p>
<p>
<b>NOTE:</b> Be sure that the "Admin" project is checked (check mark beside it) from the Project selector before you check for service updates. The Project selector is located at the top of the page to the right of the OpenStack logo.</p>
<p>If there is a new Service Update for Database, retrieve it from CODN. This will retrieve the Database  package from CODN and push it into a container in Swift within your local cloud.</p>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Step 2: Install the Database Service Update</title>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Preparation</title>
<p>You will need the following pieces of information in order to run the Database Service Update.</p>
<table pgwide="1">
<tgroup cols="2">
<colspec colname="col1"/>
<colspec colname="col2"/>
<thead>
<row>
    <entry>
      Identifier
    </entry>
    <entry>
      Description
    </entry>
  </row>
</thead>
<tbody>
<row>
    <entry>
      BASE_NODE_IP
    </entry>
    <entry>
      The IP address of the base node for your Helion installation.
    </entry>
  </row>
<row>
    <entry>
      SEED_NODE_IP
    </entry>
    <entry>
      The IP address of the seed node for your Helion installation.
    </entry>
  </row>
<row>
    <entry>
      USERNAME
    </entry>
    <entry>
      The username of a cloud admin that has rights to perform an HDP Database Service Update.
    </entry>
  </row>
<row>
    <entry>
      PASSWORD
    </entry>
    <entry>
      The password of a cloud admin that has rights to perform an HDP Database Service Update.
    </entry>
  </row>
<row>
    <entry>
      HEAT_ADMIN_KEY
    </entry>
    <entry>
      The private key file for the **heat-admin** user. 
Usually available within the root user account on the seed node here: **~/.ssh/id_rsa**
    </entry>
  </row>
<row>
    <entry>
      CONTAINER_NAME
    </entry>
    <entry>
      The Swift container that contains the Database service update.
 
Defaults to **dbaas-horizon-ui**.
    </entry>
  </row>
<row>
    <entry>
      SERVICE_UPDATE_FILENAME
    </entry>
    <entry>
      The filename of the Database service update.
 
Typically can be found inside the above container in Swift.
    </entry>
  </row>
</tbody>
</tgroup>
</table>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Let's get to it!</title>
<p>a) SSH to the seed node of your cloud:</p>
<codeblock>
  <codeph># SSH to the base node
ssh USERNAME@BASE_NODE_IP

# Become root
sudo su (will prompt for the PASSWORD)

# SSH to seed node
ssh SEED_NODE_IP
</codeph>
</codeblock>
<p>b) Ensure your environment has the proper credentials to perform the download from Swift:</p>
<codeblock>
  <codeph># Source the overcloud credentials to reach Swift 
export TE_DATAFILE="/root/tripleo/ce_env.json"
source /root/tripleo/tripleo-incubator/overcloudrc
</codeph>
</codeblock>
<p>c) Use the Swift client to download the Service Update:</p>
<codeblock>
  <codeph># List the contents of the Swift container
swift list dbaas-horizon-ui

# Take note of the name of the file within the container
# ex: SERVICE_UPDATE_FILENAME.tar.gz

# Download the installation file
swift download CONTAINER_NAME SERVICE_UPDATE_FILENAME
</codeph>
</codeblock>
<p>d)  Once the file is downloaded, unzip/tar the file:</p>
<codeblock>
  <codeph>tar -zxvf SERVICE_UPDATE_FILENAME.tar.gz
</codeph>
</codeblock>
<p>e) Go into the newly created folder and execute the install script, passing in the location of the private key of the heat-admin account:</p>
<codeblock>
  <codeph># Source undercloud creds from the same location as the overcloudrc
source /root/tripleo/tripleo-incubator/undercloudrc

# Fire up the install!
cd SERVICE_UPDATE_FILENAME
./install.sh HEAT_ADMIN_KEY
</codeph>
</codeblock>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Step 3: Configure the Database Service</title>
<ol>
<li>
<p>In the Configure Services panel in the <b>Helion Development Platform UI</b>, click the <b>Configure Service</b> button to begin configuration of the service. In the configuration dialog, specify the following configuration options:</p>

<ul>
<li>
<b>Service User Password</b> (Required) - The password for the Admin user that is currently logged in. This password MUST match the password used to log in to Horizon.</li>
<li>
<b>Key Pair</b> (Required) - Key Pair to install on all instances created as part of the database service. The public key can be used by an admin to get SSH access to all instances.</li>
<li>
<b>External Network</b> (Required) - Network Name for the network that has external network access. For HP Helion OpenStack Commercial Edition this network is named <b>ext-net</b> .</li>
<li>
<b>Provider Network</b> (Required) - Network Name for the network that has network access to cloud infrastructure services. For HP Helion OpenStack Commercial Edition this network is named <b>SVC</b>.</li>
<li>
<b>NTP Server IP</b> - IP Address to an NTP server to use if instances will not have outbound access to the internet.</li>
<li>
<b>Logstash RabbitMQ IP Address</b> (Required) - Specify the IP address of the RabbitMQ Server publishing to the central Logstash server.</li>
<li>
<b>Logstash RabbitMQ Password</b> (Required) - Specify the password for the RabbitMQ Server publishing to the central Logstash server.</li>
<li>
<b>Ephemeral CA Password</b> (Required) - Specify the password for the Ephemeral CA server. </li>
<li>
<b>Ephemeral CA IP Address</b> (Required) - Specify the IP address of Ephemeral CA server.</li>
<li>
<b>Volume Type</b> (Required) -  The volume type to use when creating database instances.</li>
<li>
<p>
<b>Enable HA</b> - Specify if the database service is to be set up in a high-availability (HA) configuration. If selected, each component of the service will have three instances created and active at all times. 
<!--A BR tag was used here in the original source.--></p>

<p>
<image href="../../media/dev_install_database_new.png"/>
</p>
</li>
</ul>
</li>
<li>
<p>After all configuration options have been provided, select the <b>Configure</b> button to complete the configuration step. Wait for the configuration step to complete and the status to change to <b>Configured</b>.</p>
</li>
</ol>
<!-- ===================== horizontal rule ===================== -->
<p>The following steps will configure HAProxy to receive and forward HTTP requests to the VM that hosts the REST API endpoint for Marketplace. To perform these steps you must be connected to the overcloud node.</p>
<ol>
<li>
<p>Identify the API server IPs on the SVC network. You should have as many API servers (and IPs) as you have Availability Zones in your Helion OpenStack install.</p>

<codeblock>
<codeph>nova list | awk '/trove[0-9]*_api/{ print $4,"\t", substr($12,5) }' 
</codeph>
</codeblock>
</li>
<li>
<p>Identify the Virtual IP used by the controller nodes to be able to load balance the Helion   OpenStack services:</p>

<codeblock>
<codeph>keystone endpoint-list | awk '/8779/{ print $6 }' | egrep -o "[0-9]+.[0-9]+.[0-9]+.[0-9]+"
</codeph>
</codeblock>
</li>
<li>
<p>Update configuration on each of the Helion OpenStack controller nodes by connecting to the controller and doing the following:</p>

<p>a. Edit the <i>/etc/haproxy/manual/paas.cfg</i> file and add the following lines. The last line should be repeated once for each API server identified in step 1.</p>

<codeblock>
<codeph>listen trove_api
bind &lt;Virtual IP from step 2&gt;:8779
option httpchk GET /
server trove-trove&lt;n&gt;_api-&lt;uniqueid&gt; &lt;API server n's IP Address&gt; check inter 2000 rise 2 fall 5 check-ssl ca-file /etc/ssl/certs/ca-certificates.crt
</codeph>
</codeblock>

<p>b. Edit the /etc/iptables/rules.v4 file and add to the end of it:</p>

<codeblock>
<codeph>-I INPUT -p tcp --dport 8779 -j ACCEPT
</codeph>
</codeblock>

<p>c. Run the following command as root:</p>

<codeblock>
<codeph>sudo iptables -I INPUT -p tcp --dport 8779 -j ACCEPT
</codeph>
</codeblock>

<p>d. Reload the haproxy service configuration</p>

<codeblock>
<codeph>sudo service haproxy reload
</codeph>
</codeblock>
</li>
<li>
<p>Log out from the Horizon dashboard. Log back into the Horizon dashboard as a non-admin user and click on the <b>Database</b> panel under the current Project to being using Database Service.</p>
</li>
</ol>
</required-cleanup>
</section>
<section>
<title>Install the Marketplace Service<!--Removed anchor point install-marketplace--></title>
<p>This section provides details on installing the Marketplace service from the Development Platform.</p>
</section>
<section>
<required-cleanup>
<title>Prerequisites</title>
<p>The <b>Marketplace Service</b> will be installed into the admin tenant of the Helion OpenStack overcloud and the admin tenant must have sufficient quota available and unused for the resources the service uses. To check existing quota availability, log-in to Horizon as the <b>admin</b> user and open the <b>Overview</b> panel under the <b>Compute</b> tab.</p>
<table>
<tgroup cols="2">
<colspec colname="col1"/>
<colspec colname="col2"/>
<thead>
<row>
<entry>Resource</entry>
  <entry align="right">Usage</entry>
</row>
</thead>
<tbody>
<row>
<entry>Floating IPs</entry>
  <entry align="right">16</entry>
</row>
<row>
<entry>Instances</entry>
  <entry align="right">4</entry>
</row>
<row>
<entry>Networks</entry>
  <entry align="right">1</entry>
</row>
<row>
<entry>RAM (GB)</entry>
  <entry align="right">8</entry>
</row>
<row>
<entry>Routers</entry>
  <entry align="right">2</entry>
</row>
<row>
<entry>Security Groups</entry>
  <entry align="right">4</entry>
</row>
</tbody>
</tgroup>
</table>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Download the Marketplace Service</title>
<ol>
<li>
<p>Open Horizon and log in as the "admin" user. Then click on the admin panel in Horizon and select the <b>Development Platform</b> Panel under Admin. Then click on the <b>Configure Services</b> sub-panel.</p>
</li>
<li>
<p>Click the <b>Connect</b> button on the <b>Configure Services</b> panel and enter your username and password for the HP Download Network (HDN). Select the Sign-up button if you do not have an account.</p>
</li>
<li>
<p>In the <b>Configure Services</b> panel, in the Configure Services table, locate the Marketplace Service item. Select <b>Download Service</b> and wait for the download to complete.</p>
</li>
</ol>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>
<!--Removed anchor point horizon-->Install the Horizon UI Update for the Marketplace Service</title>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Step 1: Retrieve the Marketplace Service Update from CODN</title>
<p>Use the <b>Helion Development Platform UI</b> to check CODN for a new Service Update for Marketplace.</p>
<p>
<b>NOTE:</b> Be sure that the "Admin" project is checked (check mark beside it) from the Project selector before you check for service updates. The Project selector is located at the top of the page to the right of the OpenStack logo.</p>
<p>If there is a new Service Update for Marketplace, retrieve it from CODN. This will retrieve the Marketplace package from CODN and push it into a container in Swift within your local cloud.</p>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Step 2: Install the Marketplace Service Update</title>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Preparation</title>
<p>You will need the following pieces of information in order to run the Marketplace Service Update.</p>
<table pgwide="1">
<tgroup cols="2">
<colspec colname="col1"/>
<colspec colname="col2"/>
<thead>
<row>
    <entry>
      Identifier
    </entry>
    <entry>
      Description
    </entry>
  </row>
</thead>
<tbody>
<row>
    <entry>
      BASE_NODE_IP
    </entry>
    <entry>
      The IP address of the base node for your Helion installation.
    </entry>
  </row>
<row>
    <entry>
      SEED_NODE_IP
    </entry>
    <entry>
      The IP address of the seed node for your Helion installation.
    </entry>
  </row>
<row>
    <entry>
      USERNAME
    </entry>
    <entry>
      The username of a cloud admin that has rights to perform an HDP Marketplace Service Update.
    </entry>
  </row>
<row>
    <entry>
      PASSWORD
    </entry>
    <entry>
      The password of a cloud admin that has rights to perform an HDP Marketplace Service Update.
    </entry>
  </row>
<row>
    <entry>
      HEAT_ADMIN_KEY
    </entry>
    <entry>
      The private key file for the **heat-admin** user. 
Usually available within the root user account on the seed node here: **~/.ssh/id_rsa**
    </entry>
  </row>
<row>
    <entry>
      CONTAINER_NAME
    </entry>
    <entry>
      The Swift container that contains the Marketplace service update.
 
Defaults to **murano-dashboard-horizon-ui**.
    </entry>
  </row>
<row>
    <entry>
      SERVICE_UPDATE_FILENAME
    </entry>
    <entry>
      The filename of the Marketplace service update.
 
Typically can be found inside the above container in Swift.
    </entry>
  </row>
</tbody>
</tgroup>
</table>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Let's get to it!</title>
<p>a) SSH to the seed node of your cloud:</p>
<codeblock>
  <codeph># SSH to the base node
ssh USERNAME@BASE_NODE_IP

# Become root
sudo su (will prompt for the PASSWORD)

# SSH to seed node
ssh SEED_NODE_IP
</codeph>
</codeblock>
<p>b) Ensure your environment has the proper credentials to perform the download from Swift:</p>
<codeblock>
  <codeph># Source the overcloud credentials to reach Swift 
export TE_DATAFILE="/root/tripleo/ce_env.json"
source /root/tripleo/tripleo-incubator/overcloudrc
</codeph>
</codeblock>
<p>c) Use the Swift client to download the Service Update:</p>
<codeblock>
  <codeph># List the contents of the Swift container
swift list murano-dashboard-horizon-ui

# Take note of the name of the file within the container
# ex: SERVICE_UPDATE_FILENAME.tar.gz

# Download the installation file
swift download CONTAINER_NAME SERVICE_UPDATE_FILENAME
</codeph>
</codeblock>
<p>d)  Once the file is downloaded, unzip/tar the file:</p>
<codeblock>
  <codeph>tar -zxvf SERVICE_UPDATE_FILENAME.tar.gz
</codeph>
</codeblock>
<p>e) Go into the newly created folder and execute the install script, passing in the location of the private key of the <b>heat-admin</b> account:</p>
<codeblock>
  <codeph># Source undercloud creds from the same location as the overcloudrc
source /root/tripleo/tripleo-incubator/undercloudrc

# Fire up the install!
cd SERVICE_UPDATE_FILENAME
./install.sh HEAT_ADMIN_KEY
</codeph>
</codeblock>
</required-cleanup>
</section>
<section>
<required-cleanup>
<title>Step 3: Configure the Marketplace Service</title>
<ol>
<li>
<p>In the <b>Helion Development Platform UI</b> , click the <b>Configure Service</b> button to begin configuration of the service. In the configuration dialog, specify the following configuration options:</p>

<ul>
<li>
<b>Service User Password</b> (Required) -  The password for the Admin user that is currently logged in. This password MUST match the password used to log in to Horizon.</li>
<li>
<b>Key Pair</b> (Required) -  Key Pair to install on all instances created as part of the database service. The public key can be used by an admin to get SSH access to all instances.</li>
<li>
<b>External Network</b> (Required) - Network Name for the network that has external network access. For HP Helion OpenStack Commercial Edition this network is named 'ext-net'</li>
<li>
<b>Provider Network</b> (Required) - Network Name for the network that has network access to cloud infrastructure services. For HP Helion OpenStack Commercial Edition this network is named 'SVC'</li>
<li>
<b>NTP Server IP</b> - IP Address to an NTP server to use if instances will not have outbound access to the internet.</li>
<li>
<b>Logstash RabbitMQ IP Address</b> (Required) - Specify the IP address of the RabbitMQ Server publishing to the central Logstash server.</li>
<li>
<b>Logstash RabbitMQ Password</b> (Required) -  Specify the password for the RabbitMQ Server publishing to the central Logstash server.</li>
<li>
<b>Ephemeral CA Password</b> (Required) - Specify the password for the Ephemeral CA server.</li>
<li>
<b>Ephemeral CA IP Address</b> (Required) - Specify the IP address of Ephemeral CA server.</li>
<li>
<b>Subnet range</b> (Required) - The subnet to use for Marketplace. <!--A BR tag was used here in the original source.--></li>
</ul>
<p>
<image href="../../media/dev_install_marketplace.png"/>
</p>
</li>
<li>
<p>Do not attempt to install any Marketplace packages yet. Log out from the Horizon console.</p>
</li>
<li>
<p>The following steps will configure HAProxy to receive and forward HTTP requests to the VM that hosts the REST API endpoint for Marketplace. To perform these steps you must be connected to the overcloud node.</p>

<ol>
<li>
<p>Identify the API server IPs on the SVC network:</p>

<codeblock>
<codeph>nova list | awk'/marketplace-api/{ print $14 }' | cut -d "=" -f 2
</codeph>
</codeblock>

<p>Note that you should have as many API servers (and IPs) as you have Availability Zones in your Helion OpenStack install.</p>
</li>
<li>
<p>Identify the Virtual IP used by the controller nodes to be able to load balance the Helion OpenStack services:</p>

<codeblock>
<codeph>keystone endpoint-list | awk '/8082/{ print $6}' | egrep -o "[0-9].[0-9].[0-9].[0-9]"
</codeph>
</codeblock>
</li>
<li>
<p>Update configuration on each of the Helion OpenStack controller nodes. <!--A BR tag was used here in the original source.--> For EACH node:</p>

<ol>
<li>Connect to the controller.</li>
<li>
<p>Open the <i>/etc/haproxy/manual/paas.cfg</i> file and add the following lines. <!--A BR tag was used here in the original source.--><b>Note</b>: The last line should be repeated once for <b>each</b> API server identified in step 1.</p>

<codeblock>
<codeph>listen marketplace_api
bind &lt;Virtual IP from step 2&gt;:8082
option httpchk GET /
server marketplace&lt;n&gt;_api-&lt;uniqueid&gt; &lt;API server n's IP Address&gt; check inter 2000 rise 2 fall 5 check-ssl ca-file /etc/ssl/certs/ca-certificates.crt 
</codeph>
</codeblock>
</li>
<li>
<p>Edit the <i>/etc/iptables/iptables</i> file and add to the file:</p>

<codeblock>
<codeph>-I INPUT -p tcp --dport 8082 -j ACCEPT
</codeph>
</codeblock>
</li>
<li>
<p>Run the following command as root:</p>

<codeblock>
<codeph>sudo iptables -I INPUT -p tcp --dport 8082 -j ACCEPT
</codeph>
</codeblock>
</li>
<li>
<p>Reload the haproxy service configuration.</p>

<codeblock>
<codeph>sudo service haproxy reload
</codeph>
</codeblock>
</li>
</ol>
</li>
</ol>
</li>
<li>
<p>Download the Vertica package.</p>

<p>a) Open Horizon and log in as the "admin" user. Then click on the admin panel in Horizon and select the Development Platform Panel under Admin. Then click on the Configure Services sub-panel.</p>

<p>b) Select the "Vertica Trial Package for Marketplace".</p>

<p>
<image href="../../media/dev_install_vertica_1.png"/>
</p>

<p>c) Select <b>Download Service</b>, and confirm the download.</p>

<p>
<image href="../../media/dev_install_vertica_confirm.png"/>
</p>

<p>d) Wait for the service to finish downloading.</p>

<p>
<image href="../../media/dev_install_vertica_2.png"/>
</p>
</li>
<li>
<p>Log back into the Horizon console as a non-admin user. Click on the <b>Marketplace</b> panel under the current Project to begin using the Marketplace Service. You may now install <xref href="/helion/devplatform/1.2/marketplace#install" >Marketplace packages</xref>.</p>
</li>
</ol>
<p>Your installation is now complete. If you encounter problems, refer to the <xref href="../../devplatform/1.2/1.2devplatform.troubleshooting.dita" >Troubleshooting</xref> documentation.</p>
</required-cleanup>
</section>
</body>
</topic>
